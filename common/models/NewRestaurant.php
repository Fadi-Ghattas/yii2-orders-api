<?php

namespace common\models;


use Yii;
use common\helpers\Helpers;

/**
 * This is the model class for table "new_restaurant".
 *
 * @property integer $id
 * @property string $name
 * @property string $address
 * @property string $phone
 * @property string $note
 * @property integer $client_id
 * @property string $deleted_at
 * @property string $created_at
 * @property string $updated_at
 *
 * @property Clients $client
 */
class NewRestaurant extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'new_restaurant';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['name', 'address'], 'required'],
            [['client_id'], 'integer'],
            [['deleted_at', 'created_at', 'updated_at'], 'safe'],
            [['name', 'address', 'phone'], 'string', 'max' => 255],
            [['note'], 'string', 'max' => 500],
            [['client_id'], 'exist', 'skipOnError' => true, 'targetClass' => Clients::className(), 'targetAttribute' => ['client_id' => 'id']],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => 'Name',
            'address' => 'Address',
            'phone' => 'Phone',
            'note' => 'Note',
            'client_id' => 'Client ID',
            'deleted_at' => 'Deleted At',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
        ];
    }

    /**
     * @inheritdoc
     * @return NewRestaurantQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new NewRestaurantQuery(get_called_class());
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getClient()
    {
        return $this->hasOne(Clients::className(), ['id' => 'client_id']);
    }

    public function beforeSave($insert)
    {
        if (!$this->isNewRecord)
            $this->updated_at = date('Y-m-d H:i:s');
        else
            $this->created_at = date('Y-m-d H:i:s');

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function afterValidate()
    {
        if ($this->hasErrors()) {
            return Helpers::HttpException(422, 'validation failed', ['error' => $this->errors]);
        }
    }

    public static function createNewRestaurant($data)
    {
        $headers = Yii::$app->request->headers;
        if (isset($headers['authorization']))
            $client = Clients::getClientByAuthorization();
        $newRestaurant = new NewRestaurant();
        $model['NewRestaurant'] = $data;
        $newRestaurant->load($model);
        if (isset($headers['authorization']))
            $newRestaurant->client_id = $client->id;
        $newRestaurant->validate();

        $isCreated = $newRestaurant->save();
        if (!$isCreated)
            return Helpers::HttpException(422, 'create failed', null);
        return Helpers::formatResponse(true, 'create success', ['id' => $newRestaurant->id]);
    }
}
